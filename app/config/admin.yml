vich_uploader:
    db_driver: orm
    mappings:
        cover:
            uri_prefix:         /thumb/covers
            upload_destination: '%kernel.root_dir%/../data/covers'
            namer:              app.file_namer
            delete_on_update:   false
        scan:
            uri_prefix:         /thumb/scans
            upload_destination: '%kernel.root_dir%/../data/scans'
            namer:              app.file_namer
            delete_on_update:   false
        fullcontent:
            uri_prefix:         /fullcontent
            upload_destination: '%kernel.root_dir%/../data/fullcontent'
            namer:              app.file_namer
            delete_on_update:   false

easy_admin:
    site_name: '%sitename%'
    design:
        theme: default
        color_scheme: light
        brand_color: '#2B547E'
        form_theme: '@App/admin_layout.html.twig'
        menu:
            - { label: Main page, route: homepage }
            - Book
        assets:
            css:
                - //cdn.rawgit.com/noelboss/featherlight/1.2.0/release/featherlight.min.css
                - css/admin.css
            js:
                - //cdn.rawgit.com/noelboss/featherlight/1.2.0/release/featherlight.min.js
                - js/admin.js
    entities:
        Book:
            class: App\Entity\Book
            role: ROLE_EDITOR
            label: Books
            image_base_path: /thumb/covers
            disabled_actions: [delete]
            list:
                title: Books
                actions:
                    - { name: new, icon: plus, label: Book.actions.new }
                    - { name: edit, icon: pencil, label: Book.actions.edit }
                    - { name: show, icon: eye, label: Book.actions.show }
                    - { name: delete, icon: trash, label: Book.actions.delete }
                fields:
                    - { property: id, template: 'link.html.twig' }
                    - { property: cover, type: image }
                    - { property: backCover, type: image }
                    - { property: title, template: 'link.html.twig' }
                    - { property: author }
                    - { property: publisher }
                    - { property: publishingYear, label: Publishing year short }
            show:
                title: 'Книга (№%%entity_id%%)'
                fields:
                    - { property: id }
                    - { property: cover, type: image }
                    - { property: backCover, type: image }
                    - { property: title, label: Заглавие }
                    - { property: author, label: Автор }
                    - { property: publisher, label: Издател }
                    - { property: publishingYear, label: Година }
            new:
                title: Book.new_title
                action_label: Нова книга
            edit:
                auth:
                    role_editor_plus: object.isIncomplete or object.createdBy == user.getUsername() or user.is('ROLE_EDITOR_PLUS')
            form:
                title: Book.form_title
                fields:
                    - { type: group, label: Data from paper, icon: book }
                    - { property: author, help: help.author }
                    - { property: title }
                    - { property: altTitle, help: help.altTitle }
                    - { property: volumeTitle, help: help.volumeTitle }
                    - { property: subtitle }
                    - { property: subtitle2 }
                    - { property: sequence }
                    - { property: sequenceNr, type: text }
                    - { property: subsequence }
                    - { property: subsequenceNr, type: text }
                    - { property: series }
                    - { property: seriesNr }
                    - { property: translator, help: help.translator }
                    - { property: translatedFromLanguage }
                    - { property: dateOfTranslation }
                    - { property: adaptedBy }
                    - { property: otherAuthors, help: help.otherAuthors }
                    - { property: compiler }
                    - { property: editorialStaff, help: help.editorialStaff }
                    - { property: chiefEditor }
                    - { property: managingEditor }
                    - { property: editor }
                    - { property: publisherEditor }
                    - { property: consultant }
                    - { property: artist, help: help.artist }
                    - { property: illustrator }
                    - { property: artistEditor, help: help.artistEditor }
                    - { property: technicalEditor }
                    - { property: reviewer }
                    - { property: scienceEditor }
                    - { property: copyreader }
                    - { property: corrector }
                    - { property: layout }
                    - { property: coverLayout, help: help.coverLayout }
                    - { property: libraryDesign }
                    - { property: computerProcessing, help: help.computerProcessing }
                    - { property: prepress }
                    - { property: publisher }
                    - { property: publisherCity }
                    - { property: publishingYear }
                    - { property: publisherAddress }
                    - { property: printingHouse }
                    - { property: contentType, help: help.contentType }
                    - { property: nationality }
                    - { property: language }
                    - { property: edition, help: help.edition }
                    - { property: litGroup }
                    - { property: typeSettingIn }
                    - { property: printSigned }
                    - { property: printOut }
                    - { property: printerSheets, help: help.printerSheets }
                    - { property: publisherSheets }
                    - { property: provisionPublisherSheets, help: help.provisionPublisherSheets }
                    - { property: format, help: help.format }
                    - { property: publisherCode }
                    - { property: trackingCode, help: help.trackingCode }
                    - { property: publisherOrder }
                    - { property: publisherNumber }
                    - { property: uniformProductClassification, help: help.uniformProductClassification }
                    - { property: pageCount, type: text, help: help.pageCount }
                    - { property: totalPrint }
                    - { property: price }
                    - { property: binding, help: help.binding }
                    - { property: illustrated, type: checkbox }
                    - { property: isbn, help: help.isbn }
                    - { property: annotation }
                    - { property: notesAboutAuthor, help: help.notesAboutAuthor }
                    - { property: marketingSnippets, help: help.marketingSnippets }
                    - { property: toc }
                    - { property: notesAboutOriginal }
                    - { property: otherFields, help: help.otherFields }

                    - { type: group, label: Notes, icon: sticky-note-o }
                    - { property: notes }

                    - { type: group, label: Categorization, icon: tag }
                    - { property: category }
                    - { property: genre, help: help.genre }
                    - { property: themes, help: help.themes }
                    - { property: universalDecimalClassification, help: help.universalDecimalClassification }

                    - { type: group, label: Links, icon: link }
                    # by_reference : false => Needed to ensure that addLink() and removeLink() will be called during the flush.
                    # See (last lines) : http://symfony.com/doc/master/reference/forms/types/collection.html#by-reference
                    - { property: chitankaId, type: text }
                    - { property: links, type: collection, type_options: { entry_type: App\Form\BookLinkType, by_reference: false }, help: help.links }

                    - { type: group, label: Covers, icon: image }
                    - { property: coverFile, type: vich_image }
                    - { property: backCoverFile, type: vich_image }
                    - { property: otherCovers, type: collection, type_options: { entry_type: App\Form\BookCoverType, by_reference: false }, css_class: 'files' }

                    - { type: group, label: Files, icon: image }
                    - { property: fullContentFile, help: help.fullContentFile, type: vich_file }
                    - { type: divider }
                    - { property: scans, type: collection, type_options: { entry_type: App\Form\BookScanType, by_reference: false }, help: help.scans, css_class: 'files' }

                    - { type: group, label: Metadata, icon: file-text-o }
                    - { property: infoSources, help: help.infoSources }
                    - { property: adminComment, help: help.adminComment }
                    - { property: ocredText, help: help.ocredText }
                    - isIncomplete
                    - reasonWhyIncomplete

        User:
            class: App\Entity\User
            role: ROLE_ADMIN
            disabled_actions: [new, delete]
            form:
                fields:
                    - username
                    - email
                    -
                        property: roles
                        type: choice
                        type_options:
                            multiple: true
                            choices:
                                ROLE_USER: ROLE_USER
                                ROLE_EDITOR: ROLE_EDITOR
                                ROLE_EDITOR_PLUS: ROLE_EDITOR_PLUS
                                ROLE_ADMIN: ROLE_ADMIN
